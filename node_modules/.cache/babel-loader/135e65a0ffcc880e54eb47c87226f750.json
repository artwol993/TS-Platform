{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Desktop/TS-Platform/src/components/pages/NewLoad.js\";\nimport React, { useState } from 'react';\nimport './NewLoad.css';\nimport { addOffer } from '../operations';\n\nfunction NewLoad({\n  onNewLoad\n}) {\n  const [companyName, setCompanyName] = useState(\"\");\n  const [loadingCountry, setLoadingCountry] = useState(\"\");\n  const [loadingPostcode, setLoadingPostcode] = useState(\"\");\n  const [loadingDate, setLoadingDate] = useState(\"\");\n  const [unloadingCountry, setUnloadingCountry] = useState(\"\");\n  const [unloadingPostcode, setUnloadingPostcode] = useState(\"\");\n  const [unloadingDate, setUnloadingDate] = useState(\"\");\n  const [shipmentWeight, setShipmentWeight] = useState(\"\");\n  const [shipmentLength, setShipmentLength] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [userMail, setUserMail] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [success, setSuccess] = useState(false);\n\n  const handleNewLoad = e => {\n    e.preventDefault();\n    const _errors = [];\n\n    if (companyName.length < 2) {\n      _errors.push(\"Nazwa firmy powinna zaiwerać przynajmniej 2 znaki\");\n    }\n\n    if (isNaN(shipmentWeight)) {\n      _errors.push(\"Waga ładunku powinna być liczbą\");\n    }\n\n    if (isNaN(shipmentLength)) {\n      _errors.push(\"Długość ładunku powinna być liczbą\");\n    }\n\n    if (userName.length < 2) {\n      _errors.push(\"Nazwa osoby kontaktowej jest za krótkie\");\n    }\n\n    if (userMail.length < 2 || userMail.indexOf(\"@\") === -1) {\n      _errors.push(\"Email powinien zawierać '@'\");\n    }\n\n    setErrors(_errors);\n    setSuccess(false);\n\n    if (_errors.length > 0) {\n      return false;\n    }\n\n    const load = {\n      companyName: `${companyName}`,\n      loadingCountry: `${loadingCountry}`,\n      loadingPostcode: `${loadingPostcode}`,\n      loadingDate: `${loadingDate}`,\n      unloadingCountry: `${unloadingCountry}`,\n      unloadingPostcode: `${unloadingPostcode}`,\n      unloadingDate: `${unloadingDate}`,\n      shipmentWeight: `${shipmentWeight}`,\n      shipmentLength: `${shipmentLength}`,\n      userName: `${userName}`,\n      userMail: `${userMail}`\n    };\n    addOffer(load, onNewLoad).then(data => {\n      setCompanyName(\"\");\n      setLoadingCountry(\"\");\n      setLoadingPostcode(\"\");\n      setLoadingDate(\"\");\n      setUnloadingCountry(\"\");\n      setUnloadingPostcode(\"\");\n      setUnloadingDate(\"\");\n      setShipmentWeight(\"\");\n      setShipmentLength(\"\");\n      setUserName(\"\");\n      setUserMail(\"\");\n      setSuccess(true);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewLoad-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, errors.map(error => /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-error\",\n    key: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 34\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleNewLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container-inside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"select\",\n    className: \"form-element\",\n    name: \"loadingCountry\",\n    placeholder: \"Kraj za\\u0142adunku\",\n    value: loadingCountry,\n    onChange: e => setLoadingCountry(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-element\",\n    name: \"loadingPostcode\",\n    placeholder: \"Kod pocztowy za\\u0142adunku\",\n    value: loadingPostcode,\n    onChange: e => setLoadingPostcode(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    className: \"form-element\",\n    name: \"loadingDate\",\n    value: loadingDate,\n    onChange: e => setLoadingDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-element\",\n    name: \"unloadingCountry\",\n    placeholder: \"Kraj roz\\u0142adunku\",\n    value: unloadingCountry,\n    onChange: e => setUnloadingCountry(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-element\",\n    name: \"unloadingPostcode\",\n    placeholder: \"Kod pocztowy roz\\u0142adunku\",\n    value: unloadingPostcode,\n    onChange: e => setUnloadingPostcode(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    className: \"form-element\",\n    name: \"unloadingDate\",\n    value: unloadingDate,\n    onChange: e => setUnloadingDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-element\",\n    name: \"shipmentWeight\",\n    placeholder: \"Waga \\u0142adunku w kg\",\n    value: shipmentWeight,\n    onChange: e => setShipmentWeight(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-element\",\n    name: \"shipmentLength\",\n    placeholder: \"D\\u0142ugo\\u015B\\u0107 \\u0142adunku w 'm' \",\n    value: shipmentLength,\n    onChange: e => setShipmentLength(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-element\",\n    name: \"companyName\",\n    placeholder: \"Nazwa firmy:\",\n    value: companyName,\n    onChange: e => setCompanyName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-element\",\n    name: \"userName\",\n    placeholder: \"Osoba kontaktowa\",\n    value: userName,\n    onChange: e => setUserName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-element\",\n    name: \"userMail\",\n    placeholder: \"e-mail\",\n    value: userMail,\n    onChange: e => setUserMail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, \"Dodaj \\u0142adunek\"))), success && /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"form_confirmation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, \"Dodano \\u0142adunek!\"));\n}\n\nexport default NewLoad;","map":{"version":3,"sources":["/home/lenovo/Desktop/TS-Platform/src/components/pages/NewLoad.js"],"names":["React","useState","addOffer","NewLoad","onNewLoad","companyName","setCompanyName","loadingCountry","setLoadingCountry","loadingPostcode","setLoadingPostcode","loadingDate","setLoadingDate","unloadingCountry","setUnloadingCountry","unloadingPostcode","setUnloadingPostcode","unloadingDate","setUnloadingDate","shipmentWeight","setShipmentWeight","shipmentLength","setShipmentLength","userName","setUserName","userMail","setUserMail","errors","setErrors","success","setSuccess","handleNewLoad","e","preventDefault","_errors","length","push","isNaN","indexOf","load","then","data","map","error","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAGA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAgC;AAE5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACc,iBAAD,EAAoBC,oBAApB,IAA4Cf,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACoB,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAM8B,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAG,EAAhB;;AAEA,QAAI7B,WAAW,CAAC8B,MAAZ,GAAqB,CAAzB,EAA4B;AACxBD,MAAAA,OAAO,CAACE,IAAR,CAAa,mDAAb;AACH;;AAED,QAAIC,KAAK,CAAClB,cAAD,CAAT,EAA2B;AACvBe,MAAAA,OAAO,CAACE,IAAR,CAAa,iCAAb;AACH;;AAED,QAAIC,KAAK,CAAChB,cAAD,CAAT,EAA2B;AACvBa,MAAAA,OAAO,CAACE,IAAR,CAAa,oCAAb;AACH;;AAED,QAAIb,QAAQ,CAACY,MAAT,GAAkB,CAAtB,EAAyB;AACrBD,MAAAA,OAAO,CAACE,IAAR,CAAa,yCAAb;AACH;;AAED,QAAIX,QAAQ,CAACU,MAAT,GAAkB,CAAlB,IAAuBV,QAAQ,CAACa,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAAtD,EAAyD;AACrDJ,MAAAA,OAAO,CAACE,IAAR,CAAa,6BAAb;AACH;;AAEDR,IAAAA,SAAS,CAACM,OAAD,CAAT;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,QAAII,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAwB;AACpB,aAAO,KAAP;AACH;;AAED,UAAMI,IAAI,GAAG;AACTlC,MAAAA,WAAW,EAAG,GAAEA,WAAY,EADnB;AAETE,MAAAA,cAAc,EAAG,GAAEA,cAAe,EAFzB;AAGTE,MAAAA,eAAe,EAAG,GAAEA,eAAgB,EAH3B;AAITE,MAAAA,WAAW,EAAG,GAAEA,WAAY,EAJnB;AAKTE,MAAAA,gBAAgB,EAAG,GAAEA,gBAAiB,EAL7B;AAMTE,MAAAA,iBAAiB,EAAG,GAAEA,iBAAkB,EAN/B;AAOTE,MAAAA,aAAa,EAAG,GAAEA,aAAc,EAPvB;AAQTE,MAAAA,cAAc,EAAG,GAAEA,cAAe,EARzB;AASTE,MAAAA,cAAc,EAAG,GAAEA,cAAe,EATzB;AAUTE,MAAAA,QAAQ,EAAG,GAAEA,QAAS,EAVb;AAWTE,MAAAA,QAAQ,EAAG,GAAEA,QAAS;AAXb,KAAb;AAeAvB,IAAAA,QAAQ,CAACqC,IAAD,EAAOnC,SAAP,CAAR,CACKoC,IADL,CACUC,IAAI,IAAI;AACVnC,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAE,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAE,MAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAE,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAE,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAdL;AAgBH,GA7DD;;AA+DA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKH,MAAM,CAACe,GAAP,CAAWC,KAAK,iBAAI;AAAG,IAAA,SAAS,EAAC,YAAb;AAA0B,IAAA,GAAG,EAAEA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,KAAvC,CAApB,CAFL,eAII;AAAM,IAAA,QAAQ,EAAEZ,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,gBAHT;AAII,IAAA,WAAW,EAAC,qBAJhB;AAKI,IAAA,KAAK,EAAExB,cALX;AAMI,IAAA,QAAQ,EAAGyB,CAAD,IAAOxB,iBAAiB,CAACwB,CAAC,CAACY,MAAF,CAASC,KAAV,CANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAUI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,iBAHT;AAII,IAAA,WAAW,EAAC,6BAJhB;AAKI,IAAA,KAAK,EAAEpC,eALX;AAMI,IAAA,QAAQ,EAAGuB,CAAD,IAAOtB,kBAAkB,CAACsB,CAAC,CAACY,MAAF,CAASC,KAAV,CANvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAkBI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,aAHT;AAII,IAAA,KAAK,EAAElC,WAJX;AAKI,IAAA,QAAQ,EAAGqB,CAAD,IAAOpB,cAAc,CAACoB,CAAC,CAACY,MAAF,CAASC,KAAV,CALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAyBI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,kBAFT;AAGI,IAAA,WAAW,EAAC,sBAHhB;AAII,IAAA,KAAK,EAAEhC,gBAJX;AAKI,IAAA,QAAQ,EAAGmB,CAAD,IAAOlB,mBAAmB,CAACkB,CAAC,CAACY,MAAF,CAASC,KAAV,CALxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,eAgCI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,mBAHT;AAII,IAAA,WAAW,EAAC,8BAJhB;AAKI,IAAA,KAAK,EAAE9B,iBALX;AAMI,IAAA,QAAQ,EAAGiB,CAAD,IAAOhB,oBAAoB,CAACgB,CAAC,CAACY,MAAF,CAASC,KAAV,CANzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,eAwCI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,eAHT;AAII,IAAA,KAAK,EAAE5B,aAJX;AAKI,IAAA,QAAQ,EAAGe,CAAD,IAAOd,gBAAgB,CAACc,CAAC,CAACY,MAAF,CAASC,KAAV,CALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCJ,eA+CI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,gBAHT;AAII,IAAA,WAAW,EAAC,wBAJhB;AAKI,IAAA,KAAK,EAAE1B,cALX;AAMI,IAAA,QAAQ,EAAGa,CAAD,IAAOZ,iBAAiB,CAACY,CAAC,CAACY,MAAF,CAASC,KAAV,CANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CJ,eAwDI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,gBAHT;AAII,IAAA,WAAW,EAAC,4CAJhB;AAKI,IAAA,KAAK,EAAExB,cALX;AAMI,IAAA,QAAQ,EAAGW,CAAD,IAAOV,iBAAiB,CAACU,CAAC,CAACY,MAAF,CAASC,KAAV,CANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDJ,CADJ,eAkEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,aAHT;AAII,IAAA,WAAW,EAAC,cAJhB;AAKI,IAAA,KAAK,EAAExC,WALX;AAMI,IAAA,QAAQ,EAAG2B,CAAD,IAAO1B,cAAc,CAAC0B,CAAC,CAACY,MAAF,CAASC,KAAV,CANnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,WAAW,EAAC,kBAJhB;AAKI,IAAA,KAAK,EAAEtB,QALX;AAKqB,IAAA,QAAQ,EAAGS,CAAD,IAAOR,WAAW,CAACQ,CAAC,CAACY,MAAF,CAASC,KAAV,CALjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAgBI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,WAAW,EAAC,QAJhB;AAKI,IAAA,KAAK,EAAEpB,QALX;AAMI,IAAA,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACY,MAAF,CAASC,KAAV,CANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CAlEJ,CADJ,eAgGI;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhGJ,CADJ,CAJJ,EA4GKhB,OAAO,iBAAI;AAAI,IAAA,SAAS,EAAE,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA5GhB,CADJ;AAiHH;;AAED,eAAe1B,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport './NewLoad.css';\nimport { addOffer } from '../operations';\n\n\nfunction NewLoad({ onNewLoad }) {\n\n    const [companyName, setCompanyName] = useState(\"\");\n    const [loadingCountry, setLoadingCountry] = useState(\"\");\n    const [loadingPostcode, setLoadingPostcode] = useState(\"\");\n    const [loadingDate, setLoadingDate] = useState(\"\");\n    const [unloadingCountry, setUnloadingCountry] = useState(\"\");\n    const [unloadingPostcode, setUnloadingPostcode] = useState(\"\");\n    const [unloadingDate, setUnloadingDate] = useState(\"\");\n    const [shipmentWeight, setShipmentWeight] = useState(\"\");\n    const [shipmentLength, setShipmentLength] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [userMail, setUserMail] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [success, setSuccess] = useState(false);\n\n    const handleNewLoad = (e) => {\n        e.preventDefault();\n        const _errors = [];\n\n        if (companyName.length < 2) {\n            _errors.push(\"Nazwa firmy powinna zaiwerać przynajmniej 2 znaki\");\n        }\n\n        if (isNaN(shipmentWeight)) {\n            _errors.push(\"Waga ładunku powinna być liczbą\")\n        }\n\n        if (isNaN(shipmentLength)) {\n            _errors.push(\"Długość ładunku powinna być liczbą\")\n        }\n\n        if (userName.length < 2) {\n            _errors.push(\"Nazwa osoby kontaktowej jest za krótkie\");\n        }\n\n        if (userMail.length < 2 || userMail.indexOf(\"@\") === -1) {\n            _errors.push(\"Email powinien zawierać '@'\")\n        }\n\n        setErrors(_errors);\n        setSuccess(false);\n        if (_errors.length > 0) {\n            return false;\n        }\n\n        const load = {\n            companyName: `${companyName}`,\n            loadingCountry: `${loadingCountry}`,\n            loadingPostcode: `${loadingPostcode}`,\n            loadingDate: `${loadingDate}`,\n            unloadingCountry: `${unloadingCountry}`,\n            unloadingPostcode: `${unloadingPostcode}`,\n            unloadingDate: `${unloadingDate}`,\n            shipmentWeight: `${shipmentWeight}`,\n            shipmentLength: `${shipmentLength}`,\n            userName: `${userName}`,\n            userMail: `${userMail}`,\n\n        };\n\n        addOffer(load, onNewLoad)\n            .then(data => {\n                setCompanyName(\"\");\n                setLoadingCountry(\"\");\n                setLoadingPostcode(\"\");\n                setLoadingDate(\"\");\n                setUnloadingCountry(\"\");\n                setUnloadingPostcode(\"\");\n                setUnloadingDate(\"\");\n                setShipmentWeight(\"\");\n                setShipmentLength(\"\");\n                setUserName(\"\");\n                setUserMail(\"\");\n                setSuccess(true);\n            })\n\n    };\n\n    return (\n        <div className='NewLoad-container'>\n\n            {errors.map(error => <p className=\"form-error\" key={error}>{error}</p>)}\n\n            <form onSubmit={handleNewLoad}>\n                <div className=\"form-container\">\n                    <div className=\"form-container-inside\">\n                        <div className=\"form-box\">\n\n                            <input\n                                type=\"select\"\n                                className=\"form-element\"\n                                name=\"loadingCountry\"\n                                placeholder=\"Kraj załadunku\"\n                                value={loadingCountry}\n                                onChange={(e) => setLoadingCountry(e.target.value)} />\n\n                            <input\n                                type=\"number\"\n                                className=\"form-element\"\n                                name=\"loadingPostcode\"\n                                placeholder=\"Kod pocztowy załadunku\"\n                                value={loadingPostcode}\n                                onChange={(e) => setLoadingPostcode(e.target.value)} />\n\n                            <input\n                                type=\"date\"\n                                className=\"form-element\"\n                                name=\"loadingDate\"\n                                value={loadingDate}\n                                onChange={(e) => setLoadingDate(e.target.value)} />\n\n                            <input type=\"text\"\n                                className=\"form-element\"\n                                name=\"unloadingCountry\"\n                                placeholder=\"Kraj rozładunku\"\n                                value={unloadingCountry}\n                                onChange={(e) => setUnloadingCountry(e.target.value)} />\n\n                            <input\n                                type=\"number\"\n                                className=\"form-element\"\n                                name=\"unloadingPostcode\"\n                                placeholder=\"Kod pocztowy rozładunku\"\n                                value={unloadingPostcode}\n                                onChange={(e) => setUnloadingPostcode(e.target.value)} />\n\n                            <input\n                                type=\"date\"\n                                className=\"form-element\"\n                                name=\"unloadingDate\"\n                                value={unloadingDate}\n                                onChange={(e) => setUnloadingDate(e.target.value)} />\n\n                            <input\n                                type=\"number\"\n                                className=\"form-element\"\n                                name=\"shipmentWeight\"\n                                placeholder=\"Waga ładunku w kg\"\n                                value={shipmentWeight}\n                                onChange={(e) => setShipmentWeight(e.target.value)} />\n\n\n                            <input\n                                type=\"number\"\n                                className=\"form-element\"\n                                name=\"shipmentLength\"\n                                placeholder=\"Długość ładunku w 'm' \"\n                                value={shipmentLength}\n                                onChange={(e) => setShipmentLength(e.target.value)} />\n\n                        </div>\n                        <div className=\"form-box\">\n                            <input\n                                type=\"text\"\n                                className=\"form-element\"\n                                name=\"companyName\"\n                                placeholder=\"Nazwa firmy:\"\n                                value={companyName}\n                                onChange={(e) => setCompanyName(e.target.value)} />\n\n                            <input\n                                type=\"text\"\n                                className=\"form-element\"\n                                name=\"userName\"\n                                placeholder=\"Osoba kontaktowa\"\n                                value={userName} onChange={(e) => setUserName(e.target.value)} />\n\n                            <input\n                                type=\"email\"\n                                className=\"form-element\"\n                                name=\"userMail\"\n                                placeholder=\"e-mail\"\n                                value={userMail}\n                                onChange={(e) => setUserMail(e.target.value)} />\n\n                        </div>\n\n                    </div>\n\n\n                    <button className=\"form-button\">Dodaj ładunek</button>\n\n                </div>\n\n\n            </form>\n\n            {success && <h2 className={\"form_confirmation\"}>Dodano ładunek!</h2>}\n\n        </div>\n    );\n}\n\nexport default NewLoad\n"]},"metadata":{},"sourceType":"module"}